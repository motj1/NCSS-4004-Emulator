2 // Decrease r0                    cell: 0

E F // Swap r0 and F                cell: 1 2

6 4 // Make r0 0 and decrease R1    cell: 3 4

2 8 5 // Inner loop                 cell: 5 6 7

5 8 3 // Second loop jump to cell 3 cell: 8 9 A

E F // Swap r0 and F                cell: B C

8 0 // Loop to zero if F not 0      cell: E D

0 // Cell F                         cell: F

// 2 E F 6 4 2 8 5 5 8 3 E F 8

// 0: Halt
// 1: Increment R0
// 2: Decrement R0
// 3: Increment R1
// 4: Decrement R1
// 5: Compute R0 + R1 and put the result in R0
// 6: Compute R0 - R1 and put the result in R0
// 7: Print R0 (Hex)
// 8*: Jump to address <data> if R0 != 0
// 9*: Jump to address <data> if R0 == 0
// A*: Load (direct) value <data> into R0
// B*: Load (direct) value <data> into R1
// C*: Copy the contents of R0 into the memory cell at <address>
// D*: Copy the contents of R1 into the memory cell at <address>
// E*: Swap the contents of R0 and memory cell at <address>
// F*: Swap the contents of R1 and memory cell at <address>